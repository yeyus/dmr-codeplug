// Code generated by protoc-gen-go.
// source: proto/tytera/tytera.proto
// DO NOT EDIT!

/*
Package tytera is a generated protocol buffer package.

It is generated from these files:
	proto/tytera/tytera.proto

It has these top-level messages:
	BasicInformation
	GeneralSettings
	MenuItems
	ContactsMenu
	CallLogMenu
	ScanMenu
	UtilitiesMenu
	OneTouchAccessEntry
	ButtonDefinitions
	MessagePresets
	PrivacySettings
	EmergencySystemEntry
	EmergencySystems
*/
package tytera

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RadioBand int32

const (
	RadioBand_VHF_136_174 RadioBand = 0
	RadioBand_UHF_350_400 RadioBand = 1
	RadioBand_UHF_400_480 RadioBand = 2
	RadioBand_UHF_450_520 RadioBand = 3
	RadioBand_DISABLED    RadioBand = 255
)

var RadioBand_name = map[int32]string{
	0:   "VHF_136_174",
	1:   "UHF_350_400",
	2:   "UHF_400_480",
	3:   "UHF_450_520",
	255: "DISABLED",
}
var RadioBand_value = map[string]int32{
	"VHF_136_174": 0,
	"UHF_350_400": 1,
	"UHF_400_480": 2,
	"UHF_450_520": 3,
	"DISABLED":    255,
}

func (x RadioBand) String() string {
	return proto.EnumName(RadioBand_name, int32(x))
}
func (RadioBand) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MonitorType int32

const (
	MonitorType_SILENT       MonitorType = 0
	MonitorType_OPEN_SQUELCH MonitorType = 1
)

var MonitorType_name = map[int32]string{
	0: "SILENT",
	1: "OPEN_SQUELCH",
}
var MonitorType_value = map[string]int32{
	"SILENT":       0,
	"OPEN_SQUELCH": 1,
}

func (x MonitorType) String() string {
	return proto.EnumName(MonitorType_name, int32(x))
}
func (MonitorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SystemType int32

const (
	SystemType_NONE    SystemType = 0
	SystemType_DIGITAL SystemType = 1
	SystemType_ANALOG  SystemType = 2
	SystemType_BOTH    SystemType = 3
)

var SystemType_name = map[int32]string{
	0: "NONE",
	1: "DIGITAL",
	2: "ANALOG",
	3: "BOTH",
}
var SystemType_value = map[string]int32{
	"NONE":    0,
	"DIGITAL": 1,
	"ANALOG":  2,
	"BOTH":    3,
}

func (x SystemType) String() string {
	return proto.EnumName(SystemType_name, int32(x))
}
func (SystemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type IntroScreenMode int32

const (
	IntroScreenMode_CHAR_STRING IntroScreenMode = 0
	IntroScreenMode_PICTURE     IntroScreenMode = 1
)

var IntroScreenMode_name = map[int32]string{
	0: "CHAR_STRING",
	1: "PICTURE",
}
var IntroScreenMode_value = map[string]int32{
	"CHAR_STRING": 0,
	"PICTURE":     1,
}

func (x IntroScreenMode) String() string {
	return proto.EnumName(IntroScreenMode_name, int32(x))
}
func (IntroScreenMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type OperationMode int32

const (
	OperationMode_MR      OperationMode = 0
	OperationMode_CHANNEL OperationMode = 255
)

var OperationMode_name = map[int32]string{
	0:   "MR",
	255: "CHANNEL",
}
var OperationMode_value = map[string]int32{
	"MR":      0,
	"CHANNEL": 255,
}

func (x OperationMode) String() string {
	return proto.EnumName(OperationMode_name, int32(x))
}
func (OperationMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ButtonFunction int32

const (
	ButtonFunction_UNASSIGNED            ButtonFunction = 0
	ButtonFunction_ALL_ALERT_TONES_ONOFF ButtonFunction = 1
	ButtonFunction_EMERGENCY_ON          ButtonFunction = 2
	ButtonFunction_EMERGENCY_OFF         ButtonFunction = 3
	ButtonFunction_HIGH_LOW_POWER        ButtonFunction = 4
	ButtonFunction_MONITOR               ButtonFunction = 5
	ButtonFunction_NUISANCE_DELETE       ButtonFunction = 6
	ButtonFunction_ONE_TOUCH_ACCESS_1    ButtonFunction = 7
	ButtonFunction_ONE_TOUCH_ACCESS_2    ButtonFunction = 8
	ButtonFunction_ONE_TOUCH_ACCESS_3    ButtonFunction = 9
	ButtonFunction_ONE_TOUCH_ACCESS_4    ButtonFunction = 10
	ButtonFunction_ONE_TOUCH_ACCESS_5    ButtonFunction = 11
	ButtonFunction_ONE_TOUCH_ACCESS_6    ButtonFunction = 12
	ButtonFunction_REPEATER_TALKAROUND   ButtonFunction = 13
	ButtonFunction_SCAN_ONOFF            ButtonFunction = 14
	ButtonFunction_TIGHT_NORMAL_SQUELCH  ButtonFunction = 21
	ButtonFunction_PRIVACY_ONOFF         ButtonFunction = 22
	ButtonFunction_VOX_ONOFF             ButtonFunction = 23
	ButtonFunction_ZONE_TOGGLE           ButtonFunction = 25
	ButtonFunction_BATTERY_INDICATOR     ButtonFunction = 26
	ButtonFunction_MANUAL_DIAL           ButtonFunction = 30
	ButtonFunction_LONE_WORK_ONOFF       ButtonFunction = 31
	ButtonFunction_TONE_1750HZ           ButtonFunction = 38
)

var ButtonFunction_name = map[int32]string{
	0:  "UNASSIGNED",
	1:  "ALL_ALERT_TONES_ONOFF",
	2:  "EMERGENCY_ON",
	3:  "EMERGENCY_OFF",
	4:  "HIGH_LOW_POWER",
	5:  "MONITOR",
	6:  "NUISANCE_DELETE",
	7:  "ONE_TOUCH_ACCESS_1",
	8:  "ONE_TOUCH_ACCESS_2",
	9:  "ONE_TOUCH_ACCESS_3",
	10: "ONE_TOUCH_ACCESS_4",
	11: "ONE_TOUCH_ACCESS_5",
	12: "ONE_TOUCH_ACCESS_6",
	13: "REPEATER_TALKAROUND",
	14: "SCAN_ONOFF",
	21: "TIGHT_NORMAL_SQUELCH",
	22: "PRIVACY_ONOFF",
	23: "VOX_ONOFF",
	25: "ZONE_TOGGLE",
	26: "BATTERY_INDICATOR",
	30: "MANUAL_DIAL",
	31: "LONE_WORK_ONOFF",
	38: "TONE_1750HZ",
}
var ButtonFunction_value = map[string]int32{
	"UNASSIGNED":            0,
	"ALL_ALERT_TONES_ONOFF": 1,
	"EMERGENCY_ON":          2,
	"EMERGENCY_OFF":         3,
	"HIGH_LOW_POWER":        4,
	"MONITOR":               5,
	"NUISANCE_DELETE":       6,
	"ONE_TOUCH_ACCESS_1":    7,
	"ONE_TOUCH_ACCESS_2":    8,
	"ONE_TOUCH_ACCESS_3":    9,
	"ONE_TOUCH_ACCESS_4":    10,
	"ONE_TOUCH_ACCESS_5":    11,
	"ONE_TOUCH_ACCESS_6":    12,
	"REPEATER_TALKAROUND":   13,
	"SCAN_ONOFF":            14,
	"TIGHT_NORMAL_SQUELCH":  21,
	"PRIVACY_ONOFF":         22,
	"VOX_ONOFF":             23,
	"ZONE_TOGGLE":           25,
	"BATTERY_INDICATOR":     26,
	"MANUAL_DIAL":           30,
	"LONE_WORK_ONOFF":       31,
	"TONE_1750HZ":           38,
}

func (x ButtonFunction) String() string {
	return proto.EnumName(ButtonFunction_name, int32(x))
}
func (ButtonFunction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type OneTouchCallType int32

const (
	// Mode = none
	OneTouchCallType_NO_CALL_TYPE OneTouchCallType = 0
	// Mode = analog
	OneTouchCallType_DTMF1 OneTouchCallType = 1
	OneTouchCallType_DTMF2 OneTouchCallType = 2
	OneTouchCallType_DTMF3 OneTouchCallType = 3
	OneTouchCallType_DTMF4 OneTouchCallType = 4
	// Mode = digital
	OneTouchCallType_CALL         OneTouchCallType = 101
	OneTouchCallType_TEXT_MESSAGE OneTouchCallType = 102
)

var OneTouchCallType_name = map[int32]string{
	0:   "NO_CALL_TYPE",
	1:   "DTMF1",
	2:   "DTMF2",
	3:   "DTMF3",
	4:   "DTMF4",
	101: "CALL",
	102: "TEXT_MESSAGE",
}
var OneTouchCallType_value = map[string]int32{
	"NO_CALL_TYPE": 0,
	"DTMF1":        1,
	"DTMF2":        2,
	"DTMF3":        3,
	"DTMF4":        4,
	"CALL":         101,
	"TEXT_MESSAGE": 102,
}

func (x OneTouchCallType) String() string {
	return proto.EnumName(OneTouchCallType_name, int32(x))
}
func (OneTouchCallType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

//
// ------------------
// Emergency Systems
// ------------------
// https://github.com/yeyus/md380-webtools/wiki/MD389---Digit-Emergency-System
type AlarmType int32

const (
	AlarmType_DISABLED_TYPE          AlarmType = 0
	AlarmType_REGULAR_TYPE           AlarmType = 1
	AlarmType_SILENT_TYPE            AlarmType = 2
	AlarmType_SILENT_WITH_VOICE_TYPE AlarmType = 3
)

var AlarmType_name = map[int32]string{
	0: "DISABLED_TYPE",
	1: "REGULAR_TYPE",
	2: "SILENT_TYPE",
	3: "SILENT_WITH_VOICE_TYPE",
}
var AlarmType_value = map[string]int32{
	"DISABLED_TYPE":          0,
	"REGULAR_TYPE":           1,
	"SILENT_TYPE":            2,
	"SILENT_WITH_VOICE_TYPE": 3,
}

func (x AlarmType) String() string {
	return proto.EnumName(AlarmType_name, int32(x))
}
func (AlarmType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type AlarmMode int32

const (
	AlarmMode_EMERGENCY_ALARM                      AlarmMode = 0
	AlarmMode_EMERGENCY_ALARM_WITH_CALL            AlarmMode = 1
	AlarmMode_EMERGENCY_ALARM_WITH_VOICE_TO_FOLLOW AlarmMode = 2
)

var AlarmMode_name = map[int32]string{
	0: "EMERGENCY_ALARM",
	1: "EMERGENCY_ALARM_WITH_CALL",
	2: "EMERGENCY_ALARM_WITH_VOICE_TO_FOLLOW",
}
var AlarmMode_value = map[string]int32{
	"EMERGENCY_ALARM":                      0,
	"EMERGENCY_ALARM_WITH_CALL":            1,
	"EMERGENCY_ALARM_WITH_VOICE_TO_FOLLOW": 2,
}

func (x AlarmMode) String() string {
	return proto.EnumName(AlarmMode_name, int32(x))
}
func (AlarmMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

//
// ------------------
// Basic Information
// ------------------
// https://github.com/yeyus/md380-webtools/wiki/MD389---Basic-Information
type BasicInformation struct {
	ModelName       string                     `protobuf:"bytes,1,opt,name=model_name,json=modelName" json:"model_name,omitempty"`
	RadioBands      []RadioBand                `protobuf:"varint,2,rep,packed,name=radio_bands,json=radioBands,enum=go.ea7jmf.codeplug.tytera.RadioBand" json:"radio_bands,omitempty"`
	HardwareVersion string                     `protobuf:"bytes,3,opt,name=hardware_version,json=hardwareVersion" json:"hardware_version,omitempty"`
	McuVersion      string                     `protobuf:"bytes,4,opt,name=mcu_version,json=mcuVersion" json:"mcu_version,omitempty"`
	DeviceId        string                     `protobuf:"bytes,5,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	LastProgramDate *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=last_program_date,json=lastProgramDate" json:"last_program_date,omitempty"`
	CpsVersion      string                     `protobuf:"bytes,7,opt,name=cps_version,json=cpsVersion" json:"cps_version,omitempty"`
}

func (m *BasicInformation) Reset()                    { *m = BasicInformation{} }
func (m *BasicInformation) String() string            { return proto.CompactTextString(m) }
func (*BasicInformation) ProtoMessage()               {}
func (*BasicInformation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BasicInformation) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *BasicInformation) GetRadioBands() []RadioBand {
	if m != nil {
		return m.RadioBands
	}
	return nil
}

func (m *BasicInformation) GetHardwareVersion() string {
	if m != nil {
		return m.HardwareVersion
	}
	return ""
}

func (m *BasicInformation) GetMcuVersion() string {
	if m != nil {
		return m.McuVersion
	}
	return ""
}

func (m *BasicInformation) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *BasicInformation) GetLastProgramDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastProgramDate
	}
	return nil
}

func (m *BasicInformation) GetCpsVersion() string {
	if m != nil {
		return m.CpsVersion
	}
	return ""
}

type GeneralSettings struct {
	ScreenLines              []string        `protobuf:"bytes,1,rep,name=screen_lines,json=screenLines" json:"screen_lines,omitempty"`
	MonitorType              MonitorType     `protobuf:"varint,2,opt,name=monitor_type,json=monitorType,enum=go.ea7jmf.codeplug.tytera.MonitorType" json:"monitor_type,omitempty"`
	DisableLeds              bool            `protobuf:"varint,3,opt,name=disable_leds,json=disableLeds" json:"disable_leds,omitempty"`
	TalkPermitTone           SystemType      `protobuf:"varint,4,opt,name=talk_permit_tone,json=talkPermitTone,enum=go.ea7jmf.codeplug.tytera.SystemType" json:"talk_permit_tone,omitempty"`
	DisablePasswordAndLock   bool            `protobuf:"varint,5,opt,name=disable_password_and_lock,json=disablePasswordAndLock" json:"disable_password_and_lock,omitempty"`
	DisableChFreeTone        bool            `protobuf:"varint,6,opt,name=disable_ch_free_tone,json=disableChFreeTone" json:"disable_ch_free_tone,omitempty"`
	DisableTones             bool            `protobuf:"varint,7,opt,name=disable_tones,json=disableTones" json:"disable_tones,omitempty"`
	BatSaveReceiveMode       bool            `protobuf:"varint,8,opt,name=bat_save_receive_mode,json=batSaveReceiveMode" json:"bat_save_receive_mode,omitempty"`
	BatSavePreamble          bool            `protobuf:"varint,9,opt,name=bat_save_preamble,json=batSavePreamble" json:"bat_save_preamble,omitempty"`
	IntroScreenMode          IntroScreenMode `protobuf:"varint,10,opt,name=intro_screen_mode,json=introScreenMode,enum=go.ea7jmf.codeplug.tytera.IntroScreenMode" json:"intro_screen_mode,omitempty"`
	RadioId                  uint32          `protobuf:"varint,11,opt,name=radio_id,json=radioId" json:"radio_id,omitempty"`
	TxPreamble               uint32          `protobuf:"varint,12,opt,name=tx_preamble,json=txPreamble" json:"tx_preamble,omitempty"`
	GroupCallHang            uint32          `protobuf:"varint,13,opt,name=group_call_hang,json=groupCallHang" json:"group_call_hang,omitempty"`
	PrivateCallHang          uint32          `protobuf:"varint,14,opt,name=private_call_hang,json=privateCallHang" json:"private_call_hang,omitempty"`
	VoxSensitivity           uint32          `protobuf:"varint,15,opt,name=vox_sensitivity,json=voxSensitivity" json:"vox_sensitivity,omitempty"`
	RxLowBattery             uint32          `protobuf:"varint,16,opt,name=rx_low_battery,json=rxLowBattery" json:"rx_low_battery,omitempty"`
	CallAlertTone            uint32          `protobuf:"varint,17,opt,name=call_alert_tone,json=callAlertTone" json:"call_alert_tone,omitempty"`
	LoneWorkerResponse       uint32          `protobuf:"varint,18,opt,name=lone_worker_response,json=loneWorkerResponse" json:"lone_worker_response,omitempty"`
	LoneWorkerReminder       uint32          `protobuf:"varint,19,opt,name=lone_worker_reminder,json=loneWorkerReminder" json:"lone_worker_reminder,omitempty"`
	ScanDigitalHangTime      uint32          `protobuf:"varint,20,opt,name=scan_digital_hang_time,json=scanDigitalHangTime" json:"scan_digital_hang_time,omitempty"`
	ScanAnalogHangTime       uint32          `protobuf:"varint,21,opt,name=scan_analog_hang_time,json=scanAnalogHangTime" json:"scan_analog_hang_time,omitempty"`
	KeypadLock               uint32          `protobuf:"varint,22,opt,name=keypad_lock,json=keypadLock" json:"keypad_lock,omitempty"`
	OperationMode            OperationMode   `protobuf:"varint,23,opt,name=operation_mode,json=operationMode,enum=go.ea7jmf.codeplug.tytera.OperationMode" json:"operation_mode,omitempty"`
	PowerOnPassword          uint32          `protobuf:"varint,24,opt,name=power_on_password,json=powerOnPassword" json:"power_on_password,omitempty"`
	RadioProgrammingPassword uint32          `protobuf:"varint,25,opt,name=radio_programming_password,json=radioProgrammingPassword" json:"radio_programming_password,omitempty"`
	PcProgrammingPassword    string          `protobuf:"bytes,26,opt,name=pc_programming_password,json=pcProgrammingPassword" json:"pc_programming_password,omitempty"`
	RadioName                string          `protobuf:"bytes,27,opt,name=radio_name,json=radioName" json:"radio_name,omitempty"`
}

func (m *GeneralSettings) Reset()                    { *m = GeneralSettings{} }
func (m *GeneralSettings) String() string            { return proto.CompactTextString(m) }
func (*GeneralSettings) ProtoMessage()               {}
func (*GeneralSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GeneralSettings) GetScreenLines() []string {
	if m != nil {
		return m.ScreenLines
	}
	return nil
}

func (m *GeneralSettings) GetMonitorType() MonitorType {
	if m != nil {
		return m.MonitorType
	}
	return MonitorType_SILENT
}

func (m *GeneralSettings) GetDisableLeds() bool {
	if m != nil {
		return m.DisableLeds
	}
	return false
}

func (m *GeneralSettings) GetTalkPermitTone() SystemType {
	if m != nil {
		return m.TalkPermitTone
	}
	return SystemType_NONE
}

func (m *GeneralSettings) GetDisablePasswordAndLock() bool {
	if m != nil {
		return m.DisablePasswordAndLock
	}
	return false
}

func (m *GeneralSettings) GetDisableChFreeTone() bool {
	if m != nil {
		return m.DisableChFreeTone
	}
	return false
}

func (m *GeneralSettings) GetDisableTones() bool {
	if m != nil {
		return m.DisableTones
	}
	return false
}

func (m *GeneralSettings) GetBatSaveReceiveMode() bool {
	if m != nil {
		return m.BatSaveReceiveMode
	}
	return false
}

func (m *GeneralSettings) GetBatSavePreamble() bool {
	if m != nil {
		return m.BatSavePreamble
	}
	return false
}

func (m *GeneralSettings) GetIntroScreenMode() IntroScreenMode {
	if m != nil {
		return m.IntroScreenMode
	}
	return IntroScreenMode_CHAR_STRING
}

func (m *GeneralSettings) GetRadioId() uint32 {
	if m != nil {
		return m.RadioId
	}
	return 0
}

func (m *GeneralSettings) GetTxPreamble() uint32 {
	if m != nil {
		return m.TxPreamble
	}
	return 0
}

func (m *GeneralSettings) GetGroupCallHang() uint32 {
	if m != nil {
		return m.GroupCallHang
	}
	return 0
}

func (m *GeneralSettings) GetPrivateCallHang() uint32 {
	if m != nil {
		return m.PrivateCallHang
	}
	return 0
}

func (m *GeneralSettings) GetVoxSensitivity() uint32 {
	if m != nil {
		return m.VoxSensitivity
	}
	return 0
}

func (m *GeneralSettings) GetRxLowBattery() uint32 {
	if m != nil {
		return m.RxLowBattery
	}
	return 0
}

func (m *GeneralSettings) GetCallAlertTone() uint32 {
	if m != nil {
		return m.CallAlertTone
	}
	return 0
}

func (m *GeneralSettings) GetLoneWorkerResponse() uint32 {
	if m != nil {
		return m.LoneWorkerResponse
	}
	return 0
}

func (m *GeneralSettings) GetLoneWorkerReminder() uint32 {
	if m != nil {
		return m.LoneWorkerReminder
	}
	return 0
}

func (m *GeneralSettings) GetScanDigitalHangTime() uint32 {
	if m != nil {
		return m.ScanDigitalHangTime
	}
	return 0
}

func (m *GeneralSettings) GetScanAnalogHangTime() uint32 {
	if m != nil {
		return m.ScanAnalogHangTime
	}
	return 0
}

func (m *GeneralSettings) GetKeypadLock() uint32 {
	if m != nil {
		return m.KeypadLock
	}
	return 0
}

func (m *GeneralSettings) GetOperationMode() OperationMode {
	if m != nil {
		return m.OperationMode
	}
	return OperationMode_MR
}

func (m *GeneralSettings) GetPowerOnPassword() uint32 {
	if m != nil {
		return m.PowerOnPassword
	}
	return 0
}

func (m *GeneralSettings) GetRadioProgrammingPassword() uint32 {
	if m != nil {
		return m.RadioProgrammingPassword
	}
	return 0
}

func (m *GeneralSettings) GetPcProgrammingPassword() string {
	if m != nil {
		return m.PcProgrammingPassword
	}
	return ""
}

func (m *GeneralSettings) GetRadioName() string {
	if m != nil {
		return m.RadioName
	}
	return ""
}

type MenuItems struct {
	HangTime     uint32         `protobuf:"varint,1,opt,name=hang_time,json=hangTime" json:"hang_time,omitempty"`
	TextMessages bool           `protobuf:"varint,2,opt,name=text_messages,json=textMessages" json:"text_messages,omitempty"`
	Contacts     *ContactsMenu  `protobuf:"bytes,3,opt,name=contacts" json:"contacts,omitempty"`
	CallLog      *CallLogMenu   `protobuf:"bytes,4,opt,name=call_log,json=callLog" json:"call_log,omitempty"`
	Scan         *ScanMenu      `protobuf:"bytes,5,opt,name=scan" json:"scan,omitempty"`
	Utilities    *UtilitiesMenu `protobuf:"bytes,6,opt,name=utilities" json:"utilities,omitempty"`
}

func (m *MenuItems) Reset()                    { *m = MenuItems{} }
func (m *MenuItems) String() string            { return proto.CompactTextString(m) }
func (*MenuItems) ProtoMessage()               {}
func (*MenuItems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MenuItems) GetHangTime() uint32 {
	if m != nil {
		return m.HangTime
	}
	return 0
}

func (m *MenuItems) GetTextMessages() bool {
	if m != nil {
		return m.TextMessages
	}
	return false
}

func (m *MenuItems) GetContacts() *ContactsMenu {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *MenuItems) GetCallLog() *CallLogMenu {
	if m != nil {
		return m.CallLog
	}
	return nil
}

func (m *MenuItems) GetScan() *ScanMenu {
	if m != nil {
		return m.Scan
	}
	return nil
}

func (m *MenuItems) GetUtilities() *UtilitiesMenu {
	if m != nil {
		return m.Utilities
	}
	return nil
}

type ContactsMenu struct {
	RadioDisable  bool `protobuf:"varint,1,opt,name=radio_disable,json=radioDisable" json:"radio_disable,omitempty"`
	RadioEnable   bool `protobuf:"varint,2,opt,name=radio_enable,json=radioEnable" json:"radio_enable,omitempty"`
	RemoteMonitor bool `protobuf:"varint,3,opt,name=remote_monitor,json=remoteMonitor" json:"remote_monitor,omitempty"`
	RadioCheck    bool `protobuf:"varint,4,opt,name=radio_check,json=radioCheck" json:"radio_check,omitempty"`
	ManualDial    bool `protobuf:"varint,5,opt,name=manual_dial,json=manualDial" json:"manual_dial,omitempty"`
	Edit          bool `protobuf:"varint,6,opt,name=edit" json:"edit,omitempty"`
	CallAlert     bool `protobuf:"varint,7,opt,name=call_alert,json=callAlert" json:"call_alert,omitempty"`
	ProgramKey    bool `protobuf:"varint,8,opt,name=program_key,json=programKey" json:"program_key,omitempty"`
}

func (m *ContactsMenu) Reset()                    { *m = ContactsMenu{} }
func (m *ContactsMenu) String() string            { return proto.CompactTextString(m) }
func (*ContactsMenu) ProtoMessage()               {}
func (*ContactsMenu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ContactsMenu) GetRadioDisable() bool {
	if m != nil {
		return m.RadioDisable
	}
	return false
}

func (m *ContactsMenu) GetRadioEnable() bool {
	if m != nil {
		return m.RadioEnable
	}
	return false
}

func (m *ContactsMenu) GetRemoteMonitor() bool {
	if m != nil {
		return m.RemoteMonitor
	}
	return false
}

func (m *ContactsMenu) GetRadioCheck() bool {
	if m != nil {
		return m.RadioCheck
	}
	return false
}

func (m *ContactsMenu) GetManualDial() bool {
	if m != nil {
		return m.ManualDial
	}
	return false
}

func (m *ContactsMenu) GetEdit() bool {
	if m != nil {
		return m.Edit
	}
	return false
}

func (m *ContactsMenu) GetCallAlert() bool {
	if m != nil {
		return m.CallAlert
	}
	return false
}

func (m *ContactsMenu) GetProgramKey() bool {
	if m != nil {
		return m.ProgramKey
	}
	return false
}

type CallLogMenu struct {
	OutgoingRadio bool `protobuf:"varint,1,opt,name=outgoing_radio,json=outgoingRadio" json:"outgoing_radio,omitempty"`
	Answered      bool `protobuf:"varint,2,opt,name=answered" json:"answered,omitempty"`
	Missed        bool `protobuf:"varint,3,opt,name=missed" json:"missed,omitempty"`
}

func (m *CallLogMenu) Reset()                    { *m = CallLogMenu{} }
func (m *CallLogMenu) String() string            { return proto.CompactTextString(m) }
func (*CallLogMenu) ProtoMessage()               {}
func (*CallLogMenu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CallLogMenu) GetOutgoingRadio() bool {
	if m != nil {
		return m.OutgoingRadio
	}
	return false
}

func (m *CallLogMenu) GetAnswered() bool {
	if m != nil {
		return m.Answered
	}
	return false
}

func (m *CallLogMenu) GetMissed() bool {
	if m != nil {
		return m.Missed
	}
	return false
}

type ScanMenu struct {
	EditList bool `protobuf:"varint,1,opt,name=edit_list,json=editList" json:"edit_list,omitempty"`
	Scan     bool `protobuf:"varint,2,opt,name=scan" json:"scan,omitempty"`
}

func (m *ScanMenu) Reset()                    { *m = ScanMenu{} }
func (m *ScanMenu) String() string            { return proto.CompactTextString(m) }
func (*ScanMenu) ProtoMessage()               {}
func (*ScanMenu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ScanMenu) GetEditList() bool {
	if m != nil {
		return m.EditList
	}
	return false
}

func (m *ScanMenu) GetScan() bool {
	if m != nil {
		return m.Scan
	}
	return false
}

type UtilitiesMenu struct {
	ToneOrAlert     bool `protobuf:"varint,1,opt,name=tone_or_alert,json=toneOrAlert" json:"tone_or_alert,omitempty"`
	Talkaround      bool `protobuf:"varint,2,opt,name=talkaround" json:"talkaround,omitempty"`
	Vox             bool `protobuf:"varint,3,opt,name=vox" json:"vox,omitempty"`
	Squelch         bool `protobuf:"varint,4,opt,name=squelch" json:"squelch,omitempty"`
	LedIndicator    bool `protobuf:"varint,5,opt,name=led_indicator,json=ledIndicator" json:"led_indicator,omitempty"`
	KeyboardLock    bool `protobuf:"varint,6,opt,name=keyboard_lock,json=keyboardLock" json:"keyboard_lock,omitempty"`
	IntroScreen     bool `protobuf:"varint,7,opt,name=intro_screen,json=introScreen" json:"intro_screen,omitempty"`
	Backlight       bool `protobuf:"varint,8,opt,name=backlight" json:"backlight,omitempty"`
	Power           bool `protobuf:"varint,9,opt,name=power" json:"power,omitempty"`
	Gps             bool `protobuf:"varint,10,opt,name=gps" json:"gps,omitempty"`
	ProgramRadio    bool `protobuf:"varint,11,opt,name=program_radio,json=programRadio" json:"program_radio,omitempty"`
	DisplayMode     bool `protobuf:"varint,12,opt,name=display_mode,json=displayMode" json:"display_mode,omitempty"`
	PasswordAndLock bool `protobuf:"varint,13,opt,name=password_and_lock,json=passwordAndLock" json:"password_and_lock,omitempty"`
}

func (m *UtilitiesMenu) Reset()                    { *m = UtilitiesMenu{} }
func (m *UtilitiesMenu) String() string            { return proto.CompactTextString(m) }
func (*UtilitiesMenu) ProtoMessage()               {}
func (*UtilitiesMenu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UtilitiesMenu) GetToneOrAlert() bool {
	if m != nil {
		return m.ToneOrAlert
	}
	return false
}

func (m *UtilitiesMenu) GetTalkaround() bool {
	if m != nil {
		return m.Talkaround
	}
	return false
}

func (m *UtilitiesMenu) GetVox() bool {
	if m != nil {
		return m.Vox
	}
	return false
}

func (m *UtilitiesMenu) GetSquelch() bool {
	if m != nil {
		return m.Squelch
	}
	return false
}

func (m *UtilitiesMenu) GetLedIndicator() bool {
	if m != nil {
		return m.LedIndicator
	}
	return false
}

func (m *UtilitiesMenu) GetKeyboardLock() bool {
	if m != nil {
		return m.KeyboardLock
	}
	return false
}

func (m *UtilitiesMenu) GetIntroScreen() bool {
	if m != nil {
		return m.IntroScreen
	}
	return false
}

func (m *UtilitiesMenu) GetBacklight() bool {
	if m != nil {
		return m.Backlight
	}
	return false
}

func (m *UtilitiesMenu) GetPower() bool {
	if m != nil {
		return m.Power
	}
	return false
}

func (m *UtilitiesMenu) GetGps() bool {
	if m != nil {
		return m.Gps
	}
	return false
}

func (m *UtilitiesMenu) GetProgramRadio() bool {
	if m != nil {
		return m.ProgramRadio
	}
	return false
}

func (m *UtilitiesMenu) GetDisplayMode() bool {
	if m != nil {
		return m.DisplayMode
	}
	return false
}

func (m *UtilitiesMenu) GetPasswordAndLock() bool {
	if m != nil {
		return m.PasswordAndLock
	}
	return false
}

type OneTouchAccessEntry struct {
	Mode     SystemType       `protobuf:"varint,1,opt,name=mode,enum=go.ea7jmf.codeplug.tytera.SystemType" json:"mode,omitempty"`
	CallType OneTouchCallType `protobuf:"varint,2,opt,name=call_type,json=callType,enum=go.ea7jmf.codeplug.tytera.OneTouchCallType" json:"call_type,omitempty"`
	// only if Mode = digital
	MessagePreset uint32 `protobuf:"varint,3,opt,name=message_preset,json=messagePreset" json:"message_preset,omitempty"`
	ContactIndex  uint32 `protobuf:"varint,4,opt,name=contact_index,json=contactIndex" json:"contact_index,omitempty"`
	// only if Mode = analog
	DtmfEncodePreset uint32 `protobuf:"varint,5,opt,name=dtmf_encode_preset,json=dtmfEncodePreset" json:"dtmf_encode_preset,omitempty"`
}

func (m *OneTouchAccessEntry) Reset()                    { *m = OneTouchAccessEntry{} }
func (m *OneTouchAccessEntry) String() string            { return proto.CompactTextString(m) }
func (*OneTouchAccessEntry) ProtoMessage()               {}
func (*OneTouchAccessEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *OneTouchAccessEntry) GetMode() SystemType {
	if m != nil {
		return m.Mode
	}
	return SystemType_NONE
}

func (m *OneTouchAccessEntry) GetCallType() OneTouchCallType {
	if m != nil {
		return m.CallType
	}
	return OneTouchCallType_NO_CALL_TYPE
}

func (m *OneTouchAccessEntry) GetMessagePreset() uint32 {
	if m != nil {
		return m.MessagePreset
	}
	return 0
}

func (m *OneTouchAccessEntry) GetContactIndex() uint32 {
	if m != nil {
		return m.ContactIndex
	}
	return 0
}

func (m *OneTouchAccessEntry) GetDtmfEncodePreset() uint32 {
	if m != nil {
		return m.DtmfEncodePreset
	}
	return 0
}

type ButtonDefinitions struct {
	LongPressDuration uint32         `protobuf:"varint,1,opt,name=long_press_duration,json=longPressDuration" json:"long_press_duration,omitempty"`
	SideShort_1       ButtonFunction `protobuf:"varint,2,opt,name=side_short_1,json=sideShort1,enum=go.ea7jmf.codeplug.tytera.ButtonFunction" json:"side_short_1,omitempty"`
	SideShort_2       ButtonFunction `protobuf:"varint,3,opt,name=side_short_2,json=sideShort2,enum=go.ea7jmf.codeplug.tytera.ButtonFunction" json:"side_short_2,omitempty"`
	SideLong_1        ButtonFunction `protobuf:"varint,4,opt,name=side_long_1,json=sideLong1,enum=go.ea7jmf.codeplug.tytera.ButtonFunction" json:"side_long_1,omitempty"`
	SideLong_2        ButtonFunction `protobuf:"varint,5,opt,name=side_long_2,json=sideLong2,enum=go.ea7jmf.codeplug.tytera.ButtonFunction" json:"side_long_2,omitempty"`
	// max of 6 entries
	OneTouchAccess []*OneTouchAccessEntry `protobuf:"bytes,6,rep,name=one_touch_access,json=oneTouchAccess" json:"one_touch_access,omitempty"`
	ContactKey_0   uint32                 `protobuf:"varint,100,opt,name=contact_key_0,json=contactKey0" json:"contact_key_0,omitempty"`
	ContactKey_1   uint32                 `protobuf:"varint,101,opt,name=contact_key_1,json=contactKey1" json:"contact_key_1,omitempty"`
	ContactKey_2   uint32                 `protobuf:"varint,102,opt,name=contact_key_2,json=contactKey2" json:"contact_key_2,omitempty"`
	ContactKey_3   uint32                 `protobuf:"varint,103,opt,name=contact_key_3,json=contactKey3" json:"contact_key_3,omitempty"`
	ContactKey_4   uint32                 `protobuf:"varint,104,opt,name=contact_key_4,json=contactKey4" json:"contact_key_4,omitempty"`
	ContactKey_5   uint32                 `protobuf:"varint,105,opt,name=contact_key_5,json=contactKey5" json:"contact_key_5,omitempty"`
	ContactKey_6   uint32                 `protobuf:"varint,106,opt,name=contact_key_6,json=contactKey6" json:"contact_key_6,omitempty"`
	ContactKey_7   uint32                 `protobuf:"varint,107,opt,name=contact_key_7,json=contactKey7" json:"contact_key_7,omitempty"`
	ContactKey_8   uint32                 `protobuf:"varint,108,opt,name=contact_key_8,json=contactKey8" json:"contact_key_8,omitempty"`
	ContactKey_9   uint32                 `protobuf:"varint,109,opt,name=contact_key_9,json=contactKey9" json:"contact_key_9,omitempty"`
}

func (m *ButtonDefinitions) Reset()                    { *m = ButtonDefinitions{} }
func (m *ButtonDefinitions) String() string            { return proto.CompactTextString(m) }
func (*ButtonDefinitions) ProtoMessage()               {}
func (*ButtonDefinitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ButtonDefinitions) GetLongPressDuration() uint32 {
	if m != nil {
		return m.LongPressDuration
	}
	return 0
}

func (m *ButtonDefinitions) GetSideShort_1() ButtonFunction {
	if m != nil {
		return m.SideShort_1
	}
	return ButtonFunction_UNASSIGNED
}

func (m *ButtonDefinitions) GetSideShort_2() ButtonFunction {
	if m != nil {
		return m.SideShort_2
	}
	return ButtonFunction_UNASSIGNED
}

func (m *ButtonDefinitions) GetSideLong_1() ButtonFunction {
	if m != nil {
		return m.SideLong_1
	}
	return ButtonFunction_UNASSIGNED
}

func (m *ButtonDefinitions) GetSideLong_2() ButtonFunction {
	if m != nil {
		return m.SideLong_2
	}
	return ButtonFunction_UNASSIGNED
}

func (m *ButtonDefinitions) GetOneTouchAccess() []*OneTouchAccessEntry {
	if m != nil {
		return m.OneTouchAccess
	}
	return nil
}

func (m *ButtonDefinitions) GetContactKey_0() uint32 {
	if m != nil {
		return m.ContactKey_0
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_1() uint32 {
	if m != nil {
		return m.ContactKey_1
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_2() uint32 {
	if m != nil {
		return m.ContactKey_2
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_3() uint32 {
	if m != nil {
		return m.ContactKey_3
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_4() uint32 {
	if m != nil {
		return m.ContactKey_4
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_5() uint32 {
	if m != nil {
		return m.ContactKey_5
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_6() uint32 {
	if m != nil {
		return m.ContactKey_6
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_7() uint32 {
	if m != nil {
		return m.ContactKey_7
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_8() uint32 {
	if m != nil {
		return m.ContactKey_8
	}
	return 0
}

func (m *ButtonDefinitions) GetContactKey_9() uint32 {
	if m != nil {
		return m.ContactKey_9
	}
	return 0
}

//
// ------------------
// Message Presets
// ------------------
// https://github.com/yeyus/md380-webtools/wiki/MD389---Text-Messages
type MessagePresets struct {
	Messages []string `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
}

func (m *MessagePresets) Reset()                    { *m = MessagePresets{} }
func (m *MessagePresets) String() string            { return proto.CompactTextString(m) }
func (*MessagePresets) ProtoMessage()               {}
func (*MessagePresets) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MessagePresets) GetMessages() []string {
	if m != nil {
		return m.Messages
	}
	return nil
}

//
// ------------------
// Privacy Settings
// ------------------
// https://github.com/yeyus/md380-webtools/wiki/MD389---Privacy-Settings
type PrivacySettings struct {
	BasicKeys    [][]byte `protobuf:"bytes,1,rep,name=basic_keys,json=basicKeys,proto3" json:"basic_keys,omitempty"`
	EnhancedKeys [][]byte `protobuf:"bytes,2,rep,name=enhanced_keys,json=enhancedKeys,proto3" json:"enhanced_keys,omitempty"`
}

func (m *PrivacySettings) Reset()                    { *m = PrivacySettings{} }
func (m *PrivacySettings) String() string            { return proto.CompactTextString(m) }
func (*PrivacySettings) ProtoMessage()               {}
func (*PrivacySettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PrivacySettings) GetBasicKeys() [][]byte {
	if m != nil {
		return m.BasicKeys
	}
	return nil
}

func (m *PrivacySettings) GetEnhancedKeys() [][]byte {
	if m != nil {
		return m.EnhancedKeys
	}
	return nil
}

type EmergencySystemEntry struct {
	SystemName      string    `protobuf:"bytes,1,opt,name=system_name,json=systemName" json:"system_name,omitempty"`
	RevertChannel   uint32    `protobuf:"varint,2,opt,name=revert_channel,json=revertChannel" json:"revert_channel,omitempty"`
	AlarmType       AlarmType `protobuf:"varint,3,opt,name=alarm_type,json=alarmType,enum=go.ea7jmf.codeplug.tytera.AlarmType" json:"alarm_type,omitempty"`
	AlarmMode       AlarmMode `protobuf:"varint,4,opt,name=alarm_mode,json=alarmMode,enum=go.ea7jmf.codeplug.tytera.AlarmMode" json:"alarm_mode,omitempty"`
	ImpoliteRetries uint32    `protobuf:"varint,5,opt,name=impolite_retries,json=impoliteRetries" json:"impolite_retries,omitempty"`
	PoliteRetries   uint32    `protobuf:"varint,6,opt,name=polite_retries,json=politeRetries" json:"polite_retries,omitempty"`
	HotMicDuration  uint32    `protobuf:"varint,7,opt,name=hot_mic_duration,json=hotMicDuration" json:"hot_mic_duration,omitempty"`
}

func (m *EmergencySystemEntry) Reset()                    { *m = EmergencySystemEntry{} }
func (m *EmergencySystemEntry) String() string            { return proto.CompactTextString(m) }
func (*EmergencySystemEntry) ProtoMessage()               {}
func (*EmergencySystemEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *EmergencySystemEntry) GetSystemName() string {
	if m != nil {
		return m.SystemName
	}
	return ""
}

func (m *EmergencySystemEntry) GetRevertChannel() uint32 {
	if m != nil {
		return m.RevertChannel
	}
	return 0
}

func (m *EmergencySystemEntry) GetAlarmType() AlarmType {
	if m != nil {
		return m.AlarmType
	}
	return AlarmType_DISABLED_TYPE
}

func (m *EmergencySystemEntry) GetAlarmMode() AlarmMode {
	if m != nil {
		return m.AlarmMode
	}
	return AlarmMode_EMERGENCY_ALARM
}

func (m *EmergencySystemEntry) GetImpoliteRetries() uint32 {
	if m != nil {
		return m.ImpoliteRetries
	}
	return 0
}

func (m *EmergencySystemEntry) GetPoliteRetries() uint32 {
	if m != nil {
		return m.PoliteRetries
	}
	return 0
}

func (m *EmergencySystemEntry) GetHotMicDuration() uint32 {
	if m != nil {
		return m.HotMicDuration
	}
	return 0
}

type EmergencySystems struct {
	RadioDisableDecode           bool                    `protobuf:"varint,1,opt,name=radio_disable_decode,json=radioDisableDecode" json:"radio_disable_decode,omitempty"`
	RemoteMonitorDecode          bool                    `protobuf:"varint,2,opt,name=remote_monitor_decode,json=remoteMonitorDecode" json:"remote_monitor_decode,omitempty"`
	EmergencyRemoteMonitorDecode bool                    `protobuf:"varint,3,opt,name=emergency_remote_monitor_decode,json=emergencyRemoteMonitorDecode" json:"emergency_remote_monitor_decode,omitempty"`
	RemoteMonitorDuration        uint32                  `protobuf:"varint,4,opt,name=remote_monitor_duration,json=remoteMonitorDuration" json:"remote_monitor_duration,omitempty"`
	TxSyncWakeup                 uint32                  `protobuf:"varint,5,opt,name=tx_sync_wakeup,json=txSyncWakeup" json:"tx_sync_wakeup,omitempty"`
	TxWakeupMessageLimit         uint32                  `protobuf:"varint,6,opt,name=tx_wakeup_message_limit,json=txWakeupMessageLimit" json:"tx_wakeup_message_limit,omitempty"`
	Entries                      []*EmergencySystemEntry `protobuf:"bytes,7,rep,name=entries" json:"entries,omitempty"`
}

func (m *EmergencySystems) Reset()                    { *m = EmergencySystems{} }
func (m *EmergencySystems) String() string            { return proto.CompactTextString(m) }
func (*EmergencySystems) ProtoMessage()               {}
func (*EmergencySystems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *EmergencySystems) GetRadioDisableDecode() bool {
	if m != nil {
		return m.RadioDisableDecode
	}
	return false
}

func (m *EmergencySystems) GetRemoteMonitorDecode() bool {
	if m != nil {
		return m.RemoteMonitorDecode
	}
	return false
}

func (m *EmergencySystems) GetEmergencyRemoteMonitorDecode() bool {
	if m != nil {
		return m.EmergencyRemoteMonitorDecode
	}
	return false
}

func (m *EmergencySystems) GetRemoteMonitorDuration() uint32 {
	if m != nil {
		return m.RemoteMonitorDuration
	}
	return 0
}

func (m *EmergencySystems) GetTxSyncWakeup() uint32 {
	if m != nil {
		return m.TxSyncWakeup
	}
	return 0
}

func (m *EmergencySystems) GetTxWakeupMessageLimit() uint32 {
	if m != nil {
		return m.TxWakeupMessageLimit
	}
	return 0
}

func (m *EmergencySystems) GetEntries() []*EmergencySystemEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*BasicInformation)(nil), "go.ea7jmf.codeplug.tytera.BasicInformation")
	proto.RegisterType((*GeneralSettings)(nil), "go.ea7jmf.codeplug.tytera.GeneralSettings")
	proto.RegisterType((*MenuItems)(nil), "go.ea7jmf.codeplug.tytera.MenuItems")
	proto.RegisterType((*ContactsMenu)(nil), "go.ea7jmf.codeplug.tytera.ContactsMenu")
	proto.RegisterType((*CallLogMenu)(nil), "go.ea7jmf.codeplug.tytera.CallLogMenu")
	proto.RegisterType((*ScanMenu)(nil), "go.ea7jmf.codeplug.tytera.ScanMenu")
	proto.RegisterType((*UtilitiesMenu)(nil), "go.ea7jmf.codeplug.tytera.UtilitiesMenu")
	proto.RegisterType((*OneTouchAccessEntry)(nil), "go.ea7jmf.codeplug.tytera.OneTouchAccessEntry")
	proto.RegisterType((*ButtonDefinitions)(nil), "go.ea7jmf.codeplug.tytera.ButtonDefinitions")
	proto.RegisterType((*MessagePresets)(nil), "go.ea7jmf.codeplug.tytera.MessagePresets")
	proto.RegisterType((*PrivacySettings)(nil), "go.ea7jmf.codeplug.tytera.PrivacySettings")
	proto.RegisterType((*EmergencySystemEntry)(nil), "go.ea7jmf.codeplug.tytera.EmergencySystemEntry")
	proto.RegisterType((*EmergencySystems)(nil), "go.ea7jmf.codeplug.tytera.EmergencySystems")
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.RadioBand", RadioBand_name, RadioBand_value)
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.MonitorType", MonitorType_name, MonitorType_value)
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.SystemType", SystemType_name, SystemType_value)
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.IntroScreenMode", IntroScreenMode_name, IntroScreenMode_value)
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.OperationMode", OperationMode_name, OperationMode_value)
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.ButtonFunction", ButtonFunction_name, ButtonFunction_value)
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.OneTouchCallType", OneTouchCallType_name, OneTouchCallType_value)
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.AlarmType", AlarmType_name, AlarmType_value)
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.AlarmMode", AlarmMode_name, AlarmMode_value)
}

func init() { proto.RegisterFile("proto/tytera/tytera.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2738 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x58, 0xdd, 0x76, 0xdb, 0xc6,
	0xf1, 0x37, 0x29, 0x59, 0x22, 0x87, 0x5f, 0xd0, 0xca, 0xb2, 0x21, 0x27, 0x8e, 0x1d, 0xc5, 0x4e,
	0x14, 0x25, 0x47, 0x96, 0x28, 0xc9, 0x8e, 0xcf, 0xff, 0x7f, 0x03, 0x93, 0x90, 0xc8, 0x63, 0x90,
	0x50, 0x41, 0xca, 0x4a, 0x72, 0x4e, 0xbb, 0x67, 0x05, 0xac, 0x48, 0x44, 0xf8, 0x60, 0x81, 0xa5,
	0x24, 0x3e, 0x47, 0x7b, 0xdf, 0xbb, 0xbe, 0x41, 0x1f, 0xa0, 0xb7, 0x7d, 0x80, 0x3e, 0x41, 0xaf,
	0xfa, 0x12, 0xed, 0xd9, 0x0f, 0x50, 0x14, 0xa3, 0xea, 0x24, 0xb9, 0x22, 0xf0, 0xdb, 0xdf, 0xcc,
	0xce, 0xce, 0xcc, 0xce, 0x0c, 0x01, 0xeb, 0xa3, 0x24, 0x66, 0xf1, 0x6b, 0x36, 0x61, 0x34, 0x21,
	0xea, 0x67, 0x5b, 0x60, 0x68, 0x7d, 0x10, 0x6f, 0x53, 0xf2, 0xf6, 0xa7, 0xf0, 0x7c, 0xdb, 0x8d,
	0x3d, 0x3a, 0x0a, 0xc6, 0x83, 0x6d, 0x49, 0x78, 0xfa, 0x7c, 0x10, 0xc7, 0x83, 0x80, 0xbe, 0x16,
	0xc4, 0xb3, 0xf1, 0xf9, 0x6b, 0xe6, 0x87, 0x34, 0x65, 0x24, 0x1c, 0x49, 0xd9, 0x8d, 0x7f, 0xe4,
	0x41, 0x7b, 0x4f, 0x52, 0xdf, 0x6d, 0x47, 0xe7, 0x71, 0x12, 0x12, 0xe6, 0xc7, 0x11, 0x7a, 0x06,
	0x10, 0xc6, 0x1e, 0x0d, 0x70, 0x44, 0x42, 0xaa, 0xe7, 0x5e, 0xe4, 0x36, 0x8b, 0x4e, 0x51, 0x20,
	0x5d, 0x12, 0x52, 0x64, 0x42, 0x29, 0x21, 0x9e, 0x1f, 0xe3, 0x33, 0x12, 0x79, 0xa9, 0x9e, 0x7f,
	0xb1, 0xb0, 0x59, 0xad, 0xbf, 0xdc, 0xfe, 0x9f, 0x56, 0x6c, 0x3b, 0x9c, 0xfd, 0x9e, 0x44, 0x9e,
	0x03, 0x49, 0xf6, 0x98, 0xa2, 0xaf, 0x41, 0x1b, 0x92, 0xc4, 0xbb, 0x22, 0x09, 0xc5, 0x97, 0x34,
	0x49, 0xfd, 0x38, 0xd2, 0x17, 0xc4, 0x5e, 0xb5, 0x0c, 0xff, 0x28, 0x61, 0xf4, 0x1c, 0x4a, 0xa1,
	0x3b, 0x9e, 0xb2, 0x16, 0x05, 0x0b, 0x42, 0x77, 0x9c, 0x11, 0x3e, 0x81, 0xa2, 0x47, 0x2f, 0x7d,
	0x97, 0x62, 0xdf, 0xd3, 0x1f, 0x8a, 0xe5, 0x82, 0x04, 0xda, 0x1e, 0x3a, 0x84, 0x95, 0x80, 0xa4,
	0x0c, 0x8f, 0x92, 0x78, 0x90, 0x90, 0x10, 0x7b, 0x84, 0x51, 0x7d, 0xe9, 0x45, 0x6e, 0xb3, 0x54,
	0x7f, 0xba, 0x2d, 0x1d, 0xb4, 0x9d, 0x39, 0x68, 0xbb, 0x9f, 0x39, 0xc8, 0xa9, 0x71, 0xa1, 0x63,
	0x29, 0xd3, 0x24, 0x8c, 0x72, 0x2b, 0xdc, 0x51, 0x3a, 0xb5, 0x62, 0x59, 0x5a, 0xe1, 0x8e, 0x52,
	0x65, 0xc5, 0xc6, 0xdf, 0x01, 0x6a, 0x47, 0x34, 0xa2, 0x09, 0x09, 0x7a, 0x94, 0x31, 0x3f, 0x1a,
	0xa4, 0xe8, 0x73, 0x28, 0xa7, 0x6e, 0x42, 0x69, 0x84, 0x03, 0x3f, 0xa2, 0xa9, 0x9e, 0x7b, 0xb1,
	0xb0, 0x59, 0x74, 0x4a, 0x12, 0xb3, 0x38, 0x84, 0xda, 0x50, 0x0e, 0xe3, 0xc8, 0x67, 0x71, 0x82,
	0xd9, 0x64, 0x44, 0xf5, 0xfc, 0x8b, 0xdc, 0x66, 0xb5, 0xfe, 0xe5, 0x3d, 0x0e, 0xed, 0x48, 0x7a,
	0x7f, 0x32, 0xa2, 0x4e, 0x29, 0xbc, 0x79, 0xe1, 0xbb, 0x79, 0x7e, 0x4a, 0xce, 0x02, 0x8a, 0x03,
	0xea, 0xa5, 0xc2, 0x9f, 0x05, 0xa7, 0xa4, 0x30, 0x8b, 0x7a, 0x29, 0xb2, 0x41, 0x63, 0x24, 0xb8,
	0xc0, 0x23, 0x9a, 0x84, 0x3e, 0xc3, 0x2c, 0x8e, 0xa8, 0x70, 0x68, 0xb5, 0xfe, 0xea, 0x9e, 0x1d,
	0x7b, 0x93, 0x94, 0xd1, 0x50, 0x6c, 0x58, 0xe5, 0xe2, 0xc7, 0x42, 0xba, 0x1f, 0x47, 0x14, 0xbd,
	0x83, 0xf5, 0x6c, 0xcf, 0x11, 0x49, 0xd3, 0xab, 0x38, 0xf1, 0x30, 0x89, 0x3c, 0x1c, 0xc4, 0xee,
	0x85, 0x88, 0x45, 0xc1, 0x79, 0xac, 0x08, 0xc7, 0x6a, 0xdd, 0x88, 0x3c, 0x2b, 0x76, 0x2f, 0xd0,
	0x6b, 0x78, 0x94, 0x89, 0xba, 0x43, 0x7c, 0x9e, 0x50, 0x2a, 0xed, 0x59, 0x12, 0x52, 0x2b, 0x6a,
	0xad, 0x31, 0x3c, 0x4c, 0x28, 0x15, 0x7b, 0x7d, 0x01, 0x95, 0x4c, 0x80, 0x13, 0x53, 0x11, 0x84,
	0x82, 0x93, 0x1d, 0x9a, 0x73, 0x52, 0xb4, 0x0b, 0x6b, 0x67, 0x84, 0xe1, 0x94, 0x5c, 0x52, 0x9c,
	0x50, 0x97, 0xfa, 0x97, 0x14, 0xf3, 0xec, 0xd5, 0x0b, 0x82, 0x8c, 0xce, 0x08, 0xeb, 0x91, 0x4b,
	0xea, 0xc8, 0xa5, 0x4e, 0xec, 0x51, 0xb4, 0x05, 0x2b, 0x53, 0x91, 0x51, 0x42, 0x49, 0x78, 0x16,
	0x50, 0xbd, 0x28, 0xe8, 0x35, 0x45, 0x3f, 0x56, 0x30, 0xfa, 0x08, 0x2b, 0x7e, 0xc4, 0x92, 0x18,
	0xab, 0xb8, 0x0a, 0xd5, 0x20, 0x3c, 0xb8, 0x75, 0x8f, 0x07, 0xdb, 0x5c, 0xa6, 0x27, 0x44, 0xf8,
	0x96, 0x4e, 0xcd, 0xbf, 0x0d, 0xa0, 0x75, 0x28, 0xc8, 0x6b, 0xe5, 0x7b, 0x7a, 0xe9, 0x45, 0x6e,
	0xb3, 0xe2, 0x2c, 0x8b, 0xf7, 0xb6, 0xc7, 0x33, 0x8f, 0x5d, 0xdf, 0x18, 0x56, 0x16, 0xab, 0xc0,
	0xae, 0xa7, 0x36, 0x7d, 0x09, 0xb5, 0x41, 0x12, 0x8f, 0x47, 0xd8, 0x25, 0x41, 0x80, 0x87, 0x24,
	0x1a, 0xe8, 0x15, 0x41, 0xaa, 0x08, 0xb8, 0x41, 0x82, 0xa0, 0x45, 0xa2, 0x01, 0x3f, 0xe7, 0x28,
	0xf1, 0x2f, 0x09, 0xa3, 0x33, 0xcc, 0xaa, 0x60, 0xd6, 0xd4, 0xc2, 0x94, 0xfb, 0x15, 0xd4, 0x2e,
	0xe3, 0x6b, 0x9c, 0xd2, 0x28, 0xf5, 0x99, 0x7f, 0xe9, 0xb3, 0x89, 0x5e, 0x13, 0xcc, 0xea, 0x65,
	0x7c, 0xdd, 0xbb, 0x41, 0xd1, 0x4b, 0xa8, 0x26, 0xd7, 0x38, 0x88, 0xaf, 0xf0, 0x19, 0x61, 0x8c,
	0x26, 0x13, 0x5d, 0x13, 0xbc, 0x72, 0x72, 0x6d, 0xc5, 0x57, 0xef, 0x25, 0xc6, 0x4d, 0x14, 0x5b,
	0x92, 0x80, 0x26, 0x2a, 0xed, 0x56, 0xa4, 0x89, 0x1c, 0x36, 0x38, 0x2a, 0x42, 0xbc, 0x03, 0x8f,
	0x82, 0x38, 0xa2, 0xf8, 0x2a, 0x4e, 0x2e, 0x68, 0x82, 0x13, 0x9a, 0x8e, 0xe2, 0x28, 0xa5, 0x3a,
	0x12, 0x64, 0xc4, 0xd7, 0x4e, 0xc5, 0x92, 0xa3, 0x56, 0x7e, 0x2e, 0x11, 0xfa, 0x91, 0x47, 0x13,
	0x7d, 0xf5, 0xe7, 0x12, 0x72, 0x05, 0xed, 0xc1, 0xe3, 0xd4, 0x25, 0x11, 0xf6, 0xfc, 0x81, 0xcf,
	0x88, 0x74, 0x03, 0xe6, 0xa5, 0x51, 0x7f, 0x24, 0x64, 0x56, 0xf9, 0x6a, 0x53, 0x2e, 0x72, 0x5f,
	0xf0, 0xa2, 0xc0, 0xd3, 0x4a, 0x08, 0x91, 0x88, 0x04, 0xf1, 0x60, 0x46, 0x66, 0x4d, 0xee, 0xc3,
	0x17, 0x0d, 0xb1, 0x36, 0x15, 0x79, 0x0e, 0xa5, 0x0b, 0x3a, 0x19, 0x11, 0x75, 0x19, 0x1e, 0xcb,
	0xb8, 0x49, 0x48, 0x5c, 0x00, 0x1b, 0xaa, 0xf1, 0x88, 0x26, 0xa2, 0xec, 0xca, 0x44, 0x7a, 0x22,
	0x12, 0x69, 0xf3, 0x9e, 0x44, 0xb2, 0x33, 0x01, 0x91, 0x46, 0x95, 0x78, 0xf6, 0x55, 0x04, 0x38,
	0xbe, 0xa2, 0x09, 0x8e, 0xa3, 0xe9, 0x6d, 0xd4, 0x75, 0x15, 0x60, 0xbe, 0x60, 0x47, 0xd9, 0x25,
	0x44, 0xff, 0x0f, 0x4f, 0x65, 0xc2, 0xa9, 0xc2, 0x18, 0xfa, 0xd1, 0xe0, 0x46, 0x68, 0x5d, 0x08,
	0xe9, 0x82, 0x71, 0x7c, 0x43, 0x98, 0x4a, 0xbf, 0x81, 0x27, 0x23, 0xf7, 0x6e, 0xd1, 0xa7, 0xa2,
	0x32, 0xae, 0x8d, 0xdc, 0xbb, 0xe4, 0x9e, 0x81, 0x6c, 0x02, 0xb2, 0xb9, 0x7c, 0x22, 0x9b, 0x8b,
	0x40, 0x78, 0x73, 0xd9, 0xf8, 0x67, 0x1e, 0x8a, 0x1d, 0x1a, 0x8d, 0xdb, 0x8c, 0x86, 0x29, 0xaf,
	0xeb, 0x37, 0x7e, 0xce, 0x09, 0x8b, 0x0a, 0xc3, 0xcc, 0xbb, 0x5f, 0x40, 0x85, 0xd1, 0x6b, 0x86,
	0x43, 0x9a, 0xa6, 0x64, 0x40, 0x53, 0x51, 0x38, 0x0b, 0x4e, 0x99, 0x83, 0x1d, 0x85, 0xa1, 0x06,
	0x14, 0xdc, 0x38, 0x62, 0xc4, 0x65, 0xb2, 0x1a, 0x96, 0xea, 0x5f, 0xdd, 0xe3, 0xdb, 0x86, 0xa2,
	0x72, 0x0b, 0x9c, 0xa9, 0x20, 0x32, 0xa0, 0x20, 0x72, 0x37, 0x88, 0x07, 0xa2, 0x56, 0x96, 0xee,
	0xad, 0xce, 0xfc, 0x06, 0x59, 0xf1, 0x40, 0xe8, 0x58, 0x76, 0xe5, 0x0b, 0x7a, 0x0b, 0x8b, 0x3c,
	0x41, 0x44, 0x41, 0x2c, 0xd5, 0xbf, 0xb8, 0xaf, 0xd4, 0xba, 0x24, 0x12, 0xb2, 0x42, 0x00, 0x1d,
	0x42, 0x71, 0xcc, 0xfc, 0xc0, 0x67, 0x3e, 0x4d, 0x55, 0xd7, 0xba, 0x2f, 0x3b, 0x4e, 0x32, 0xae,
	0x50, 0x71, 0x23, 0xba, 0xf1, 0xa7, 0x3c, 0x94, 0x67, 0x8f, 0xc7, 0xdd, 0x27, 0x03, 0xa1, 0x8a,
	0xa7, 0xf0, 0x6f, 0xc1, 0x29, 0x0b, 0xb0, 0x29, 0x31, 0xde, 0x50, 0x24, 0x89, 0x46, 0x82, 0x23,
	0x5d, 0x2c, 0xfb, 0xbf, 0x29, 0x20, 0xf4, 0x0a, 0xaa, 0x09, 0x0d, 0x63, 0xc6, 0x8b, 0xac, 0xe8,
	0x44, 0xaa, 0xeb, 0x54, 0x24, 0xaa, 0x7a, 0x15, 0xbf, 0x0b, 0x52, 0x93, 0x3b, 0xa4, 0xee, 0x85,
	0x70, 0x63, 0x41, 0xcd, 0x03, 0x0d, 0x8e, 0x88, 0x26, 0x4f, 0xa2, 0x31, 0x09, 0xb0, 0xe7, 0x93,
	0x40, 0x75, 0x0e, 0x90, 0x50, 0xd3, 0x27, 0x01, 0x42, 0xb0, 0x48, 0x3d, 0x9f, 0xa9, 0xee, 0x20,
	0x9e, 0x79, 0x36, 0xdd, 0x54, 0x15, 0xd5, 0x0d, 0x8a, 0xd3, 0x82, 0xc2, 0x75, 0x66, 0x5d, 0xff,
	0x82, 0x4e, 0x54, 0x03, 0x00, 0x05, 0x7d, 0xa0, 0x93, 0x8d, 0x21, 0x94, 0x66, 0xc2, 0xc5, 0xcf,
	0x12, 0x8f, 0xd9, 0x20, 0xe6, 0xe9, 0x2c, 0x4c, 0x53, 0x4e, 0xa9, 0x64, 0xa8, 0x18, 0x65, 0xd0,
	0x53, 0x28, 0x90, 0x28, 0xbd, 0xa2, 0x09, 0xf5, 0x94, 0x47, 0xa6, 0xef, 0xe8, 0x31, 0x2c, 0x85,
	0x7e, 0x9a, 0x52, 0x4f, 0xb9, 0x41, 0xbd, 0x6d, 0xfc, 0x1f, 0x14, 0xb2, 0xc8, 0xf2, 0xb4, 0xe6,
	0xd6, 0xe3, 0xc0, 0x4f, 0x99, 0xda, 0xa1, 0xc0, 0x01, 0xcb, 0x4f, 0x19, 0x3f, 0xa6, 0xc8, 0x14,
	0xa9, 0x58, 0x3c, 0x6f, 0xfc, 0x75, 0x01, 0x2a, 0xb7, 0x22, 0x8b, 0x36, 0xa0, 0xc2, 0x6b, 0x28,
	0x8e, 0x13, 0x75, 0x76, 0xa9, 0xa6, 0xc4, 0x41, 0x3b, 0x91, 0xa7, 0xff, 0x0c, 0x80, 0xf7, 0x6a,
	0x92, 0xc4, 0xe3, 0x28, 0x33, 0x74, 0x06, 0x41, 0x1a, 0x2c, 0x5c, 0xc6, 0xd7, 0xca, 0x4e, 0xfe,
	0x88, 0x74, 0x58, 0x4e, 0xff, 0x38, 0xa6, 0x81, 0x3b, 0x54, 0x01, 0xca, 0x5e, 0x79, 0xb6, 0x04,
	0xd4, 0xc3, 0x7e, 0xe4, 0xf9, 0x2e, 0xe1, 0x41, 0x96, 0xf1, 0x29, 0x07, 0xd4, 0x6b, 0x67, 0x18,
	0x27, 0x5d, 0xd0, 0xc9, 0x59, 0x4c, 0x12, 0x55, 0xf1, 0x64, 0xa8, 0xca, 0x19, 0x28, 0x6a, 0xde,
	0xe7, 0x50, 0x9e, 0xed, 0x9f, 0x2a, 0x68, 0xa5, 0x99, 0x76, 0x88, 0x3e, 0x85, 0xe2, 0x19, 0x71,
	0x2f, 0x02, 0x7f, 0x30, 0x64, 0x2a, 0x68, 0x37, 0x00, 0x7a, 0x04, 0x0f, 0x45, 0x29, 0x53, 0x0d,
	0x5a, 0xbe, 0xf0, 0xc3, 0x0c, 0x46, 0xa9, 0x68, 0xc4, 0x05, 0x87, 0x3f, 0x72, 0x6b, 0xb2, 0xe0,
	0xcb, 0x58, 0x96, 0xa4, 0x35, 0x0a, 0x94, 0xa1, 0x94, 0x13, 0xd3, 0x28, 0x20, 0x13, 0x59, 0x7f,
	0xcb, 0xd3, 0x89, 0x89, 0x63, 0xd3, 0x9a, 0xfa, 0xb3, 0xc1, 0xa6, 0x22, 0x87, 0x83, 0xd1, 0xed,
	0x89, 0x66, 0xe3, 0xcf, 0x79, 0x58, 0xb5, 0x23, 0xda, 0x8f, 0xc7, 0xee, 0xd0, 0x70, 0x5d, 0x9a,
	0xa6, 0x66, 0xc4, 0x92, 0x09, 0x7a, 0x07, 0x8b, 0x42, 0x7d, 0xee, 0xd7, 0x4c, 0x5a, 0x42, 0x04,
	0xb5, 0x40, 0x24, 0xf4, 0xec, 0x6c, 0xf8, 0xcd, 0x7d, 0xed, 0x41, 0xed, 0xce, 0xd3, 0x5a, 0x68,
	0x11, 0xa5, 0x4b, 0x4c, 0x87, 0xaf, 0xa0, 0xaa, 0x6a, 0x25, 0x9f, 0x25, 0x52, 0xca, 0x44, 0xe8,
	0x2b, 0x4e, 0x45, 0xa1, 0xc7, 0x02, 0xe4, 0x7e, 0x53, 0x95, 0x8f, 0x87, 0x9b, 0x5e, 0x8b, 0x54,
	0xa8, 0x38, 0x65, 0x05, 0xb6, 0x39, 0x86, 0xbe, 0x05, 0xe4, 0xb1, 0xf0, 0x1c, 0xd3, 0x88, 0x1b,
	0x90, 0xe9, 0x7b, 0x28, 0x98, 0x1a, 0x5f, 0x31, 0xc5, 0x82, 0x54, 0xb9, 0xf1, 0xb7, 0x25, 0x58,
	0x79, 0x3f, 0x66, 0x2c, 0x8e, 0x9a, 0xf4, 0xdc, 0x8f, 0x7c, 0xde, 0xaf, 0x52, 0xb4, 0x0d, 0xab,
	0x41, 0xcc, 0x1b, 0x47, 0x42, 0xd3, 0x14, 0x7b, 0x63, 0xd9, 0xc7, 0x54, 0x9d, 0x5f, 0xe1, 0x4b,
	0x5c, 0x3c, 0x6d, 0xaa, 0x05, 0xf4, 0x01, 0xca, 0xa9, 0xef, 0x51, 0x9c, 0x0e, 0xe3, 0x84, 0xe1,
	0x5d, 0xe5, 0x8c, 0xaf, 0xef, 0x71, 0x86, 0xdc, 0xf3, 0x70, 0x1c, 0xb9, 0x5c, 0x81, 0x03, 0x5c,
	0xbc, 0xc7, 0xa5, 0x77, 0xe7, 0x94, 0xd5, 0x85, 0x2b, 0x7e, 0xa3, 0xb2, 0x3a, 0x6a, 0x43, 0x49,
	0x28, 0x13, 0xc7, 0xd9, 0x55, 0xf3, 0xf4, 0xaf, 0xd0, 0x55, 0xe4, 0xd2, 0x56, 0x1c, 0x0d, 0x76,
	0x6f, 0xab, 0xaa, 0x0b, 0x8f, 0xfe, 0x36, 0x55, 0x75, 0xf4, 0x3d, 0x68, 0xbc, 0x44, 0x30, 0x9e,
	0x0e, 0x98, 0x88, 0x6c, 0xd4, 0x97, 0x5e, 0x2c, 0x6c, 0x96, 0xea, 0xdb, 0xbf, 0x20, 0x81, 0x66,
	0xd2, 0xd7, 0xa9, 0xc6, 0xb7, 0x40, 0x5e, 0x7d, 0xb2, 0x14, 0xb9, 0xa0, 0x13, 0xbc, 0xa3, 0x7b,
	0x22, 0x66, 0x25, 0x05, 0x7e, 0xa0, 0x93, 0x9d, 0x79, 0xce, 0xae, 0x4e, 0xe7, 0x39, 0xbb, 0xf3,
	0x9c, 0xba, 0x7e, 0x3e, 0xcf, 0xa9, 0xcf, 0x73, 0xf6, 0xf4, 0xc1, 0x3c, 0x67, 0x6f, 0x9e, 0xb3,
	0xaf, 0x0f, 0xe7, 0x39, 0xfb, 0xf3, 0x9c, 0x03, 0xdd, 0x9f, 0xe7, 0x1c, 0xcc, 0x73, 0xde, 0xe8,
	0x3f, 0xcd, 0x73, 0xde, 0xcc, 0x73, 0xde, 0xea, 0x17, 0xf3, 0x9c, 0xb7, 0xf3, 0x9c, 0xef, 0xf4,
	0x60, 0x9e, 0xf3, 0xdd, 0x3c, 0xe7, 0x9d, 0x1e, 0xce, 0x73, 0xde, 0x6d, 0x7c, 0x0b, 0xd5, 0xce,
	0xec, 0xdd, 0x4c, 0x79, 0xeb, 0x99, 0xce, 0x3b, 0xf2, 0xbf, 0xe4, 0xf4, 0x7d, 0xe3, 0x04, 0x6a,
	0xc7, 0x7c, 0x88, 0x77, 0x27, 0xd3, 0xbf, 0x9f, 0xcf, 0x00, 0xce, 0xf8, 0xdf, 0x7b, 0xbe, 0x85,
	0x14, 0x28, 0xf3, 0x52, 0x9a, 0xfa, 0xee, 0x07, 0x3a, 0x11, 0x25, 0x92, 0x46, 0x43, 0x12, 0xb9,
	0xd4, 0x93, 0x8c, 0xbc, 0x60, 0x94, 0x33, 0x90, 0x93, 0x36, 0xfe, 0x95, 0x87, 0x47, 0x66, 0x48,
	0x93, 0x01, 0x8d, 0xdc, 0x89, 0x2c, 0x4f, 0xb2, 0xa8, 0x3d, 0x87, 0x52, 0x2a, 0x5e, 0x67, 0x3f,
	0x14, 0x80, 0x84, 0xc4, 0x97, 0x02, 0x31, 0x1a, 0x5c, 0xf2, 0x79, 0xdf, 0x1d, 0x92, 0x28, 0xa2,
	0x81, 0xb8, 0xb2, 0x15, 0x3e, 0x1a, 0x70, 0xb4, 0x21, 0x41, 0xd4, 0x00, 0x20, 0x01, 0x49, 0x42,
	0x59, 0xe2, 0xe4, 0x45, 0xbc, 0xef, 0x7b, 0x82, 0xc1, 0xc9, 0xa2, 0xb6, 0x15, 0x49, 0xf6, 0x78,
	0xa3, 0x44, 0xd4, 0xd9, 0xc5, 0x5f, 0xa6, 0x44, 0x8c, 0xd0, 0x52, 0x89, 0x28, 0xf5, 0x5f, 0x83,
	0xe6, 0x87, 0xa3, 0x38, 0xf0, 0x19, 0xff, 0xeb, 0xc8, 0x12, 0x3e, 0x73, 0xc9, 0x9a, 0x56, 0xcb,
	0x70, 0x47, 0xc2, 0xfc, 0x6c, 0x73, 0xc4, 0x25, 0x79, 0xb6, 0xdb, 0xb4, 0x4d, 0xd0, 0x86, 0x31,
	0xc3, 0xa1, 0xef, 0xde, 0x14, 0xb8, 0x65, 0xf9, 0x37, 0x6a, 0x18, 0xb3, 0x8e, 0xef, 0x66, 0xd5,
	0x6d, 0xe3, 0x2f, 0x0b, 0xa0, 0xcd, 0xb9, 0x39, 0xe5, 0xff, 0x6d, 0x6e, 0x0d, 0x69, 0xd8, 0xa3,
	0x6e, 0xd6, 0x47, 0x0a, 0x0e, 0x9a, 0x9d, 0xd5, 0x9a, 0x62, 0x05, 0xd5, 0x61, 0xed, 0xf6, 0x38,
	0x96, 0x89, 0xc8, 0xfe, 0xbf, 0x7a, 0x6b, 0x2a, 0x53, 0x32, 0x26, 0x3c, 0xa7, 0xd9, 0xce, 0xf8,
	0x6e, 0x69, 0x39, 0x24, 0x7c, 0x3a, 0xa5, 0x39, 0x77, 0xa8, 0x79, 0x03, 0x4f, 0xe6, 0x85, 0xb3,
	0x23, 0xcb, 0x16, 0xb2, 0x76, 0x7b, 0xf3, 0xac, 0xae, 0xbf, 0x84, 0x2a, 0xbb, 0xc6, 0xe9, 0x24,
	0x72, 0xf1, 0x15, 0xb9, 0xa0, 0xe3, 0x91, 0xf2, 0x79, 0x99, 0x5d, 0xf7, 0x26, 0x91, 0x7b, 0x2a,
	0x30, 0x74, 0x00, 0x4f, 0xd8, 0xb5, 0x22, 0x64, 0x33, 0x3f, 0x0e, 0xfc, 0x50, 0x4d, 0x84, 0x15,
	0xe7, 0x11, 0xbb, 0x96, 0x54, 0x75, 0x65, 0x2c, 0xbe, 0x86, 0xda, 0xb0, 0x4c, 0x23, 0x19, 0xa0,
	0x65, 0x51, 0xfb, 0x5e, 0xdf, 0x93, 0x14, 0x77, 0xa5, 0xb9, 0x93, 0xc9, 0x6f, 0xfd, 0x01, 0x8a,
	0xd3, 0x4f, 0x59, 0xa8, 0x06, 0xa5, 0x8f, 0xad, 0x43, 0xbc, 0xbb, 0xf7, 0x06, 0xef, 0xbe, 0xdd,
	0xd7, 0x1e, 0x70, 0xe0, 0xa4, 0x75, 0x88, 0xf7, 0x0e, 0x76, 0xf0, 0xfe, 0xce, 0x8e, 0x96, 0xcb,
	0x80, 0xfd, 0x9d, 0x1d, 0xbc, 0xff, 0xdd, 0x8e, 0x96, 0x9f, 0x02, 0x07, 0x3b, 0xf8, 0xa0, 0xbe,
	0xa3, 0x2d, 0xa0, 0x0a, 0x14, 0x9a, 0xed, 0x9e, 0xf1, 0xde, 0x32, 0x9b, 0xda, 0x7f, 0x72, 0x5b,
	0xdf, 0x40, 0x69, 0xe6, 0xcb, 0x0e, 0x02, 0x58, 0xea, 0xb5, 0x2d, 0xb3, 0xdb, 0xd7, 0x1e, 0x20,
	0x0d, 0xca, 0xf6, 0xb1, 0xd9, 0xc5, 0xbd, 0xdf, 0x9d, 0x98, 0x56, 0xa3, 0xa5, 0xe5, 0xb6, 0xde,
	0x01, 0xdc, 0x8c, 0x0a, 0xa8, 0x00, 0x8b, 0x5d, 0xbb, 0x6b, 0x6a, 0x0f, 0x50, 0x09, 0x96, 0x9b,
	0xed, 0xa3, 0x76, 0xdf, 0xb0, 0xb4, 0x1c, 0x57, 0x61, 0x74, 0x0d, 0xcb, 0x3e, 0xd2, 0xf2, 0x9c,
	0xf2, 0xde, 0xee, 0xb7, 0xb4, 0x85, 0xad, 0xd7, 0x50, 0x9b, 0xfb, 0x1a, 0xc1, 0x4d, 0x6b, 0xb4,
	0x0c, 0x07, 0xf7, 0xfa, 0x4e, 0xbb, 0x7b, 0x24, 0xd5, 0x1c, 0xb7, 0x1b, 0xfd, 0x13, 0xc7, 0xd4,
	0x72, 0x5b, 0xaf, 0xa0, 0x72, 0xeb, 0x5f, 0x27, 0x5a, 0x82, 0x7c, 0xc7, 0xd1, 0x1e, 0xa0, 0x32,
	0x2c, 0x37, 0x5a, 0x46, 0xb7, 0x6b, 0x5a, 0xdc, 0xfe, 0x7f, 0x2f, 0x40, 0xf5, 0x76, 0x37, 0x42,
	0x55, 0x80, 0x93, 0xae, 0xd1, 0xeb, 0xb5, 0x8f, 0xba, 0x66, 0x53, 0x7b, 0x80, 0xd6, 0x61, 0xcd,
	0xb0, 0x2c, 0x6c, 0x58, 0xa6, 0xd3, 0xc7, 0x7d, 0xbb, 0x6b, 0xf6, 0xb0, 0xdd, 0xb5, 0x0f, 0x0f,
	0xb5, 0x1c, 0x3f, 0xa2, 0xd9, 0x31, 0x9d, 0x23, 0xb3, 0xdb, 0xf8, 0x01, 0xdb, 0x5d, 0x2d, 0x8f,
	0x56, 0xa0, 0x32, 0x83, 0x1c, 0x1e, 0x6a, 0x0b, 0x08, 0x41, 0xb5, 0xd5, 0x3e, 0x6a, 0x61, 0xcb,
	0x3e, 0xc5, 0xc7, 0xf6, 0xa9, 0xe9, 0x68, 0x8b, 0xdc, 0xd4, 0x8e, 0xdd, 0x6d, 0xf7, 0x6d, 0x47,
	0x7b, 0x88, 0x56, 0xa1, 0xd6, 0x3d, 0x69, 0xf7, 0x8c, 0x6e, 0xc3, 0xc4, 0x4d, 0xd3, 0x32, 0xfb,
	0xa6, 0xb6, 0x84, 0x1e, 0x03, 0xb2, 0xbb, 0x26, 0xee, 0xdb, 0x27, 0x8d, 0x16, 0x36, 0x1a, 0x0d,
	0xb3, 0xd7, 0xc3, 0xbb, 0xda, 0xf2, 0x9d, 0x78, 0x5d, 0x2b, 0xdc, 0x89, 0xef, 0x69, 0xc5, 0x3b,
	0xf1, 0x7d, 0x0d, 0xee, 0xc4, 0x0f, 0xb4, 0xd2, 0x9d, 0xf8, 0x1b, 0xad, 0x8c, 0x9e, 0xc0, 0xaa,
	0x63, 0x1e, 0x9b, 0x46, 0xdf, 0x74, 0x70, 0xdf, 0xb0, 0x3e, 0x18, 0x8e, 0x7d, 0xd2, 0x6d, 0x6a,
	0x15, 0xee, 0xae, 0x5e, 0xc3, 0xe8, 0x2a, 0x9f, 0x54, 0x91, 0x0e, 0x8f, 0xfa, 0xed, 0xa3, 0x56,
	0x1f, 0x77, 0x6d, 0xa7, 0x63, 0x58, 0xd3, 0xf0, 0xaf, 0x71, 0xdf, 0x1c, 0x3b, 0xed, 0x8f, 0x86,
	0xf0, 0x15, 0x27, 0x3f, 0x46, 0x15, 0x28, 0x7e, 0xb4, 0xbf, 0x57, 0xaf, 0x4f, 0x78, 0x48, 0x7f,
	0x94, 0xbb, 0x1f, 0x1d, 0x59, 0xa6, 0xb6, 0x8e, 0xd6, 0x60, 0xe5, 0xbd, 0xd1, 0xef, 0x9b, 0xce,
	0x0f, 0xb8, 0xdd, 0x6d, 0xb6, 0x1b, 0x06, 0xf7, 0xd8, 0x53, 0xce, 0xeb, 0x18, 0xdd, 0x13, 0xc3,
	0xc2, 0xcd, 0xb6, 0x61, 0x69, 0x9f, 0x71, 0x17, 0x5a, 0x5c, 0xf0, 0xd4, 0x76, 0x3e, 0x28, 0x6d,
	0xcf, 0x39, 0x8b, 0x87, 0x0b, 0xef, 0xbe, 0x3d, 0xd8, 0x69, 0xfd, 0xa8, 0x7d, 0xb9, 0x15, 0x80,
	0x36, 0x3f, 0x6a, 0xf2, 0x10, 0x76, 0x6d, 0xdc, 0xe0, 0x11, 0xee, 0xff, 0x70, 0xcc, 0xb3, 0xb1,
	0x08, 0x0f, 0x9b, 0xfd, 0xce, 0xe1, 0xae, 0x96, 0xcb, 0x1e, 0xeb, 0x5a, 0x3e, 0x7b, 0xdc, 0xd3,
	0x16, 0xb2, 0xc7, 0x7d, 0x6d, 0x91, 0x27, 0x28, 0x17, 0xd5, 0x84, 0x9e, 0xbe, 0xf9, 0x7d, 0x1f,
	0x77, 0xcc, 0x5e, 0xcf, 0x38, 0x32, 0xb5, 0xf3, 0xad, 0xdf, 0x43, 0x71, 0x5a, 0xf5, 0xf9, 0xd9,
	0xb3, 0x6b, 0x93, 0xed, 0xa3, 0x41, 0xd9, 0x31, 0x8f, 0x4e, 0x2c, 0xc3, 0x91, 0x88, 0xb8, 0x7d,
	0xf2, 0xf6, 0x48, 0x20, 0x8f, 0x9e, 0xc2, 0x63, 0x05, 0x9c, 0xb6, 0xfb, 0x2d, 0xfc, 0xd1, 0x6e,
	0x37, 0x4c, 0xb9, 0xb6, 0xb0, 0xe5, 0x2b, 0xf5, 0x22, 0xb9, 0x57, 0xa1, 0x76, 0x93, 0x76, 0x86,
	0x65, 0x38, 0x1d, 0xed, 0x01, 0x7a, 0x06, 0xeb, 0x73, 0xa0, 0x54, 0x23, 0x2c, 0xce, 0xa1, 0x4d,
	0x78, 0x79, 0xe7, 0xb2, 0xda, 0xc5, 0xc6, 0x87, 0xb6, 0x65, 0xd9, 0xa7, 0x5a, 0xfe, 0x6c, 0x49,
	0x7c, 0x6a, 0xde, 0xfb, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x57, 0x1b, 0xdb, 0x3e, 0xd1, 0x17,
	0x00, 0x00,
}
