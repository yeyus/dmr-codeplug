// Code generated by protoc-gen-go.
// source: proto/tytera/tytera.proto
// DO NOT EDIT!

/*
Package tytera is a generated protocol buffer package.

It is generated from these files:
	proto/tytera/tytera.proto

It has these top-level messages:
	BasicInformation
*/
package tytera

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RadioBand int32

const (
	RadioBand_VHF_136_174 RadioBand = 0
	RadioBand_UHF_350_400 RadioBand = 1
	RadioBand_UHF_400_480 RadioBand = 2
	RadioBand_UHF_450_520 RadioBand = 3
	RadioBand_DISABLED    RadioBand = 255
)

var RadioBand_name = map[int32]string{
	0:   "VHF_136_174",
	1:   "UHF_350_400",
	2:   "UHF_400_480",
	3:   "UHF_450_520",
	255: "DISABLED",
}
var RadioBand_value = map[string]int32{
	"VHF_136_174": 0,
	"UHF_350_400": 1,
	"UHF_400_480": 2,
	"UHF_450_520": 3,
	"DISABLED":    255,
}

func (x RadioBand) String() string {
	return proto.EnumName(RadioBand_name, int32(x))
}
func (RadioBand) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type BasicInformation struct {
	ModelName       string                     `protobuf:"bytes,1,opt,name=model_name,json=modelName" json:"model_name,omitempty"`
	RadioBands      []RadioBand                `protobuf:"varint,2,rep,packed,name=radio_bands,json=radioBands,enum=go.ea7jmf.codeplug.tytera.RadioBand" json:"radio_bands,omitempty"`
	HardwareVersion string                     `protobuf:"bytes,3,opt,name=hardware_version,json=hardwareVersion" json:"hardware_version,omitempty"`
	McuVersion      string                     `protobuf:"bytes,4,opt,name=mcu_version,json=mcuVersion" json:"mcu_version,omitempty"`
	DeviceId        string                     `protobuf:"bytes,5,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	LastProgramDate *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=last_program_date,json=lastProgramDate" json:"last_program_date,omitempty"`
	CpsVersion      string                     `protobuf:"bytes,7,opt,name=cps_version,json=cpsVersion" json:"cps_version,omitempty"`
}

func (m *BasicInformation) Reset()                    { *m = BasicInformation{} }
func (m *BasicInformation) String() string            { return proto.CompactTextString(m) }
func (*BasicInformation) ProtoMessage()               {}
func (*BasicInformation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BasicInformation) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *BasicInformation) GetRadioBands() []RadioBand {
	if m != nil {
		return m.RadioBands
	}
	return nil
}

func (m *BasicInformation) GetHardwareVersion() string {
	if m != nil {
		return m.HardwareVersion
	}
	return ""
}

func (m *BasicInformation) GetMcuVersion() string {
	if m != nil {
		return m.McuVersion
	}
	return ""
}

func (m *BasicInformation) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *BasicInformation) GetLastProgramDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastProgramDate
	}
	return nil
}

func (m *BasicInformation) GetCpsVersion() string {
	if m != nil {
		return m.CpsVersion
	}
	return ""
}

func init() {
	proto.RegisterType((*BasicInformation)(nil), "go.ea7jmf.codeplug.tytera.BasicInformation")
	proto.RegisterEnum("go.ea7jmf.codeplug.tytera.RadioBand", RadioBand_name, RadioBand_value)
}

func init() { proto.RegisterFile("proto/tytera/tytera.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0x41, 0xcf, 0xd2, 0x30,
	0x18, 0x80, 0x1d, 0xe8, 0xe7, 0xb7, 0x2e, 0xca, 0xec, 0x69, 0x60, 0x0c, 0xc4, 0x78, 0x40, 0x0f,
	0xa5, 0xc0, 0x10, 0xaf, 0x12, 0x20, 0x90, 0x18, 0x63, 0xa6, 0x72, 0xb4, 0x79, 0x59, 0xcb, 0x9c,
	0x59, 0xd7, 0xa5, 0xed, 0x30, 0xfe, 0x45, 0xff, 0x94, 0x66, 0x1b, 0xdb, 0xed, 0x3b, 0x6d, 0x79,
	0xfa, 0xbc, 0xe9, 0xd3, 0x17, 0x0d, 0x0b, 0xad, 0xac, 0x9a, 0xd9, 0x3f, 0x56, 0x68, 0xb8, 0x7d,
	0x48, 0xcd, 0xf0, 0x30, 0x51, 0x44, 0xc0, 0xfa, 0x97, 0xbc, 0x90, 0x58, 0x71, 0x51, 0x64, 0x65,
	0x42, 0x1a, 0x61, 0x34, 0x4e, 0x94, 0x4a, 0x32, 0x31, 0xab, 0xc5, 0x73, 0x79, 0x99, 0xd9, 0x54,
	0x0a, 0x63, 0x41, 0x16, 0xcd, 0xec, 0xeb, 0xbf, 0x3d, 0xe4, 0x6f, 0xc0, 0xa4, 0xf1, 0x31, 0xbf,
	0x28, 0x2d, 0xc1, 0xa6, 0x2a, 0xc7, 0xaf, 0x10, 0x92, 0x8a, 0x8b, 0x8c, 0xe5, 0x20, 0x45, 0xe0,
	0x4c, 0x9c, 0xa9, 0x1b, 0xb9, 0x35, 0xf9, 0x0c, 0x52, 0xe0, 0x1d, 0xf2, 0x34, 0xf0, 0x54, 0xb1,
	0x33, 0xe4, 0xdc, 0x04, 0xbd, 0x49, 0x7f, 0xfa, 0x7c, 0xf1, 0x86, 0x3c, 0x58, 0x41, 0xa2, 0xca,
	0xde, 0x40, 0xce, 0x23, 0xa4, 0xdb, 0x5f, 0x83, 0xdf, 0x22, 0xff, 0x27, 0x68, 0xfe, 0x1b, 0xb4,
	0x60, 0x57, 0xa1, 0x4d, 0xaa, 0xf2, 0xa0, 0x5f, 0xdf, 0x35, 0x68, 0xf9, 0xa9, 0xc1, 0x78, 0x8c,
	0x3c, 0x19, 0x97, 0x9d, 0xf5, 0xb8, 0xb6, 0x90, 0x8c, 0xcb, 0x56, 0x78, 0x89, 0x5c, 0x2e, 0xae,
	0x69, 0x2c, 0x58, 0xca, 0x83, 0x27, 0xf5, 0xf1, 0x7d, 0x03, 0x8e, 0x1c, 0xef, 0xd1, 0x8b, 0x0c,
	0x8c, 0x65, 0x85, 0x56, 0x89, 0x06, 0xc9, 0x38, 0x58, 0x11, 0xdc, 0x4d, 0x9c, 0xa9, 0xb7, 0x18,
	0x91, 0x66, 0x41, 0xa4, 0x5d, 0x10, 0xf9, 0xd6, 0x2e, 0x28, 0x1a, 0x54, 0x43, 0x5f, 0x9a, 0x99,
	0x2d, 0x58, 0x51, 0x55, 0xc4, 0x85, 0xe9, 0x2a, 0x9e, 0x36, 0x15, 0x71, 0x61, 0x6e, 0x15, 0xef,
	0x7e, 0x20, 0xb7, 0x7b, 0x2a, 0x1e, 0x20, 0xef, 0x74, 0xd8, 0xb3, 0xf9, 0xf2, 0x3d, 0x9b, 0xaf,
	0x43, 0xff, 0x51, 0x05, 0xbe, 0x1f, 0xf6, 0x6c, 0xb9, 0xa2, 0x2c, 0xa4, 0xd4, 0x77, 0x5a, 0x10,
	0x52, 0xca, 0xc2, 0x0f, 0xd4, 0xef, 0x75, 0x60, 0x45, 0xd9, 0x6a, 0x41, 0xfd, 0x3e, 0x7e, 0x86,
	0xee, 0xb7, 0xc7, 0xaf, 0x1f, 0x37, 0x9f, 0x76, 0x5b, 0xff, 0x9f, 0x73, 0xbe, 0xab, 0x2b, 0x97,
	0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x08, 0x40, 0x51, 0x37, 0x0c, 0x02, 0x00, 0x00,
}
